#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpFKPTelyakov
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="telyakovKP")]
	public partial class dcOtsenkAbitDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertOtsenki_abityr(Otsenki_abityr instance);
    partial void UpdateOtsenki_abityr(Otsenki_abityr instance);
    partial void DeleteOtsenki_abityr(Otsenki_abityr instance);
    #endregion
		
		public dcOtsenkAbitDataContext() : 
				base(global::WpFKPTelyakov.Properties.Settings.Default.db, mappingSource)
		{
			OnCreated();
		}
		
		public dcOtsenkAbitDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcOtsenkAbitDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcOtsenkAbitDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcOtsenkAbitDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Otsenki_abityr> Otsenki_abityr
		{
			get
			{
				return this.GetTable<Otsenki_abityr>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Otsenki_abityr")]
	public partial class Otsenki_abityr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_abit_otsenk;
		
		private string _Kod_LD;
		
		private System.Nullable<int> _kol_vo_3;
		
		private System.Nullable<int> _kol_vo_4;
		
		private System.Nullable<int> _kol_vo_5;
		
		private System.Nullable<double> _Sred_ball;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_abit_otsenkChanging(int value);
    partial void OnID_abit_otsenkChanged();
    partial void OnKod_LDChanging(string value);
    partial void OnKod_LDChanged();
    partial void Onkol_vo_3Changing(System.Nullable<int> value);
    partial void Onkol_vo_3Changed();
    partial void Onkol_vo_4Changing(System.Nullable<int> value);
    partial void Onkol_vo_4Changed();
    partial void Onkol_vo_5Changing(System.Nullable<int> value);
    partial void Onkol_vo_5Changed();
    partial void OnSred_ballChanging(System.Nullable<double> value);
    partial void OnSred_ballChanged();
    #endregion
		
		public Otsenki_abityr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ID abit otsenk]", Storage="_ID_abit_otsenk", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID_abit_otsenk
		{
			get
			{
				return this._ID_abit_otsenk;
			}
			set
			{
				if ((this._ID_abit_otsenk != value))
				{
					this.OnID_abit_otsenkChanging(value);
					this.SendPropertyChanging();
					this._ID_abit_otsenk = value;
					this.SendPropertyChanged("ID_abit_otsenk");
					this.OnID_abit_otsenkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kod LD]", Storage="_Kod_LD", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Kod_LD
		{
			get
			{
				return this._Kod_LD;
			}
			set
			{
				if ((this._Kod_LD != value))
				{
					this.OnKod_LDChanging(value);
					this.SendPropertyChanging();
					this._Kod_LD = value;
					this.SendPropertyChanged("Kod_LD");
					this.OnKod_LDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[kol vo 3]", Storage="_kol_vo_3", DbType="Int")]
		public System.Nullable<int> kol_vo_3
		{
			get
			{
				return this._kol_vo_3;
			}
			set
			{
				if ((this._kol_vo_3 != value))
				{
					this.Onkol_vo_3Changing(value);
					this.SendPropertyChanging();
					this._kol_vo_3 = value;
					this.SendPropertyChanged("kol_vo_3");
					this.Onkol_vo_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[kol vo 4]", Storage="_kol_vo_4", DbType="Int")]
		public System.Nullable<int> kol_vo_4
		{
			get
			{
				return this._kol_vo_4;
			}
			set
			{
				if ((this._kol_vo_4 != value))
				{
					this.Onkol_vo_4Changing(value);
					this.SendPropertyChanging();
					this._kol_vo_4 = value;
					this.SendPropertyChanged("kol_vo_4");
					this.Onkol_vo_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[kol vo 5]", Storage="_kol_vo_5", DbType="Int")]
		public System.Nullable<int> kol_vo_5
		{
			get
			{
				return this._kol_vo_5;
			}
			set
			{
				if ((this._kol_vo_5 != value))
				{
					this.Onkol_vo_5Changing(value);
					this.SendPropertyChanging();
					this._kol_vo_5 = value;
					this.SendPropertyChanged("kol_vo_5");
					this.Onkol_vo_5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sred ball]", Storage="_Sred_ball", DbType="Float")]
		public System.Nullable<double> Sred_ball
		{
			get
			{
				return this._Sred_ball;
			}
			set
			{
				if ((this._Sred_ball != value))
				{
					this.OnSred_ballChanging(value);
					this.SendPropertyChanging();
					this._Sred_ball = value;
					this.SendPropertyChanged("Sred_ball");
					this.OnSred_ballChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
